const express = require('express')
const router = express.Router()
const { validationErrorHandler, checkEmailOrUsername } = require('./../../middleware/index')
const { creatUserValidator, userLoginValidator, profileByIdValidator, updateUserDataValidation } = require('./../../validation/auth_validation')
const { permissionRequire } = require('./../../permission/users_permission')
const { createUser, userLogin, removeUser, selfRemove, updateUser, getMyProfile, getUserById, getAllUsers } = require('./../../controller/auth')
const { verifyToken } = require('./../../token/index')
router.post('/auth/resgister', creatUserValidator, validationErrorHandler, createUser)
router.post('/auth/login', userLoginValidator, checkEmailOrUsername, validationErrorHandler, userLogin)
router.delete('/auth/remove/user', verifyToken, permissionRequire(['admin', 'moderator']), profileByIdValidator, validationErrorHandler, removeUser)
router.delete('/auth/self_remove', verifyToken, profileByIdValidator, validationErrorHandler, selfRemove)
router.patch('/auth/update/users', verifyToken, permissionRequire(['admin', 'moderator']), updateUserDataValidation, validationErrorHandler, updateUser)
router.get('/myprofile', verifyToken, getMyProfile)
router.get('/profile/id', verifyToken, permissionRequire(['admin']), profileByIdValidator, validationErrorHandler, getUserById)
router.get('/profile/all', verifyToken, permissionRequire(['admin']), getAllUsers)

module.exports = router